\\Title :- Consider a student database of SY COMP class (at least 15 records). Database contains different
fields of every student like Roll No, Name and SGPA.
a.Design a roll call list, arrange list of students according to roll numbers in ascending order
using Insertion Sort
\\Name :- Aditya Bhoye
\\PRN  :- 124B2B016
\\Class & Div :- SYCO(B)

\\ Code
#include <iostream>
#include <string>
#include <iomanip>
#include <vector>

using namespace std;

struct Student {
    int rollNo;
    string name;
    float sgpa;
};


void insertionSort(vector<Student>& students) {
    int n = students.size();
    for (int i = 1; i < n; i++) {
        Student key = students[i];
        int j = i - 1;

        while (j >= 0 && students[j].rollNo > key.rollNo) {
            students[j + 1] = students[j];
            j--;
        }
        students[j + 1] = key;
    }
}

void printRollCallList(const vector<Student>& students) {
    cout << left << setw(10) << "Roll No" << setw(25) << "Name" << setw(10) << "SGPA" << endl;
    cout << string(45, '-') << endl;
    for (const auto& student : students) {
        cout << setw(10) << student.rollNo
            << setw(25) << student.name
            << setw(10) << student.sgpa << endl;
    }
}

int main() {
    vector<Student> students = {
        {101, "Alice ", 8.5},
        {102, "Bob ", 7.2},
        {103, "Charlie B", 9.0},
        {104, "David ", 6.8},
        {105, "Eva ", 8.1},
        {106, "Frank ", 7.5},
        {107, "Grace ", 8.8},
        {108, "Henry ", 9.2},
        {109, "Ivy ", 7.9},
        {110, "Jack ", 8.3},
        {111, "Kevin ", 7.6},
        {112, "Lily ", 9.5},
        {113, "Mark ", 8.0},
        {114, "Nancy ", 7.4},
        {115, "Oscar ", 8.9}
    };

    int choice;
    do {
        cout << "\nMenu:\n";
        cout << "1. Display Roll Call List\n";
        cout << "2. Add a New Student\n";
        cout << "3. Sort List by Roll No\n";
        cout << "4. Exit\n";
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
            case 1:
                cout << "\nRoll Call List:" << endl;
                printRollCallList(students);
                break;

            case 2: {
                Student newStudent;
                cout << "Enter Roll No: ";
                cin >> newStudent.rollNo;
                cin.ignore(); // To clear the newline character from input buffer
                cout << "Enter Name: ";
                getline(cin, newStudent.name);
                cout << "Enter SGPA: ";
                cin >> newStudent.sgpa;
                students.push_back(newStudent);
                cout << "Student added successfully!\n";
                break;
            }

            case 3:
                insertionSort(students);
                cout << "List sorted by Roll No.\n";
                break;

            case 4:
                cout << "Exiting...\n";
                break;

            default:
                cout << "Invalid choice! Please try again.\n";
                break;
        }
    } while (choice != 4);

    return 0;
}
